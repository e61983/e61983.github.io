<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Yuan のノート</title><link>https://e61983.github.io/</link><description>Recent content on Yuan のノート</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><managingEditor>e61983@gmail.com (Yuan Li)</managingEditor><webMaster>e61983@gmail.com (Yuan Li)</webMaster><copyright>©2022, All Rights Reserved</copyright><lastBuildDate>Mon, 22 Aug 2022 14:43:42 +0800</lastBuildDate><atom:link href="https://e61983.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在 Go 中使用 Redis</title><link>https://e61983.github.io/2022-08-22-how-to-use-redis-with-go/</link><pubDate>Mon, 22 Aug 2022 14:43:42 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Mon, 22 Aug 2022 14:43:42 +0800</atom:modified><guid>https://e61983.github.io/2022-08-22-how-to-use-redis-with-go/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近想試著使用 Redis ，於是乎這一篇就誕生了！&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>redis</category><category>note</category></item><item><title>在 Go 語言中使用 Websocket</title><link>https://e61983.github.io/2022-08-14-golang-and-websocket/</link><pubDate>Sun, 14 Aug 2022 15:41:25 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sun, 14 Aug 2022 15:41:25 +0800</atom:modified><guid>https://e61983.github.io/2022-08-14-golang-and-websocket/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>先前在網頁中想取得即時資料。在那個時候有聽到 websocket 這個東西，但一直沒有時間試試。最近剛好又想起了這件事，於是乎這一篇就誕生啦。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>websocket</category><category>website</category></item><item><title>在 Go 中與 Protobuf 共舞 ？！</title><link>https://e61983.github.io/2022-08-09-go-and-protobuf/</link><pubDate>Tue, 09 Aug 2022 23:20:07 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 09 Aug 2022 23:20:07 +0800</atom:modified><guid>https://e61983.github.io/2022-08-09-go-and-protobuf/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>會有這一篇的誕生是因為原本在寫 gRPC 的筆記時發現篇幅太長，想說還是拆開寫好了。於是乎這一篇就出現了。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>protobuf</category><category>note</category></item><item><title>Certificated Ethical Hacker (CEH) 考試小記</title><link>https://e61983.github.io/2022-08-06-ceh-exam-v11/</link><pubDate>Sat, 06 Aug 2022 02:01:43 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sat, 06 Aug 2022 02:01:43 +0800</atom:modified><guid>https://e61983.github.io/2022-08-06-ceh-exam-v11/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前一陣子每天下班後花 2 個小時讀書，終於通過了周三的考試。本文主要會簡述它是什麼以及要如何準備它！&lt;/p></description><dc:creator>Yuan</dc:creator><category>ceh</category><category>hacker</category><category>hacker</category></item><item><title>在 Synology NAS 開啟 iperf 伺服器</title><link>https://e61983.github.io/2022-08-02-use-iperf-on-synology-nas/</link><pubDate>Tue, 02 Aug 2022 01:59:04 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 02 Aug 2022 01:59:04 +0800</atom:modified><guid>https://e61983.github.io/2022-08-02-use-iperf-on-synology-nas/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近發現家中的 NAS 速度 &amp;ldquo;好像&amp;rdquo; 沒有達到筆者的預期。所以想來實際測看看可以目前的網路環境可以跑到什麼程度。於似乎這一篇就誕生了。&lt;/p></description><dc:creator>Yuan</dc:creator><category>synology</category><category>nas</category><category>iperf</category><category>note</category><category>mis</category></item><item><title>Go 語言使用私有 Git Repository</title><link>https://e61983.github.io/2022-07-30-go-module-using-private-repository/</link><pubDate>Sat, 30 Jul 2022 14:51:00 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sat, 30 Jul 2022 14:51:00 +0800</atom:modified><guid>https://e61983.github.io/2022-07-30-go-module-using-private-repository/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近終於有時間整裡筆者家中的 NAS 。先前筆者已經架設好了 Gitea，但一直沒有時間把整個開發環境串起來。這篇文章記錄了如何在 go 中使用自架的 Git Repository。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>git</category><category>ssh</category><category>note</category></item><item><title>Go語言、動態連結函式庫與它們的產地</title><link>https://e61983.github.io/2022-07-21-golang-with-shared-library/</link><pubDate>Thu, 21 Jul 2022 13:16:54 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 21 Jul 2022 13:16:54 +0800</atom:modified><guid>https://e61983.github.io/2022-07-21-golang-with-shared-library/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近寫 Go 時想嘗試使用動態連結函式庫。於是乎這一篇就誔生了。&lt;br />
本文會試著使用 Go 編出一個動態連結函式庫，並使用 C 語言程式以及 Go 語言程式呼叫它。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>c</category><category>library</category><category>note</category></item><item><title>使用 Vue、Electron 以及 Go 建立一個小工具</title><link>https://e61983.github.io/2022-07-15-how-to-use-vue-electron-and-go-to-build-an-app/</link><pubDate>Fri, 15 Jul 2022 16:01:27 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Fri, 15 Jul 2022 16:01:27 +0800</atom:modified><guid>https://e61983.github.io/2022-07-15-how-to-use-vue-electron-and-go-to-build-an-app/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近剛好有機會要寫有圖形化介面的程式。想來想去感覺可以寫寫看 Electron！於是乎本篇就這樣誕生了。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>vue</category><category>electron</category><category>note</category></item><item><title>如何解決在 MacOS VS Code 按鍵無法連續輸入的問題</title><link>https://e61983.github.io/2022-06-22-macos-hold-a-key-and-repeat-it-in-vscode/</link><pubDate>Wed, 22 Jun 2022 11:26:48 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 22 Jun 2022 11:26:48 +0800</atom:modified><guid>https://e61983.github.io/2022-06-22-macos-hold-a-key-and-repeat-it-in-vscode/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>筆者已經習慣 vim 的輸入模式。所以在使用 VS Code 時，會安裝 vim 輸入模式的外掛。在鍵盤按鍵接住時，VS Code 卻不會連續輸入。本文主要就是要來解決這個問題。&lt;/p></description><dc:creator>Yuan</dc:creator><category>VSCode</category><category>MacOS</category><category>note</category></item><item><title>如何在 Postgresql 資料庫中的刪除大量資料</title><link>https://e61983.github.io/2022-06-20-postgresql-delete-large-data/</link><pubDate>Mon, 20 Jun 2022 11:32:58 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Mon, 20 Jun 2022 11:32:58 +0800</atom:modified><guid>https://e61983.github.io/2022-06-20-postgresql-delete-large-data/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>一開始為了收集、分析資料，筆者把所有的記錄都保存起來。隨著專案的進行我們只需要保留特定條件的記錄。想說就趁著這次順手記錄起來吧。&lt;/p></description><dc:creator>Yuan</dc:creator><category>postgresql</category><category>database</category></item><item><title>如何設定 Unifi AP</title><link>https://e61983.github.io/2022-05-29-how-to-setup-unifi-ap/</link><pubDate>Sun, 29 May 2022 02:18:03 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sun, 29 May 2022 02:18:03 +0800</atom:modified><guid>https://e61983.github.io/2022-05-29-how-to-setup-unifi-ap/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近入手了新的 Unifi AP，趁這一次設定就順手記錄起來吧。&lt;/p></description><dc:creator>Yuan</dc:creator><category>unifi</category><category>mis</category></item><item><title>使用 Gin 框架實作登入功能</title><link>https://e61983.github.io/2021-09-14-go-gin-web-backend/</link><pubDate>Tue, 14 Sep 2021 17:03:13 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 14 Sep 2021 17:03:13 +0800</atom:modified><guid>https://e61983.github.io/2021-09-14-go-gin-web-backend/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近又要開始接觸到網頁的東西了!&lt;br />
久沒有碰要再花一點時間回想。想說就趁著這次順手記錄起來吧。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>gin</category><category>web backend</category><category>cookie</category><category>website</category></item><item><title>在 i.MX 8QuadXPlus 上使用 Yocto 建置 Linux 系統 4</title><link>https://e61983.github.io/2021-09-13-yocto-with-imx8qxp-4/</link><pubDate>Mon, 13 Sep 2021 11:38:39 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Mon, 13 Sep 2021 11:38:39 +0800</atom:modified><guid>https://e61983.github.io/2021-09-13-yocto-with-imx8qxp-4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>為了在之後開發過程中不用反覆燒寫 eMMC 與 SD 卡，本篇會設定 U-Boot 載入 Rootfs 以達到我們的目的。&lt;/p></description><dc:creator>Yuan</dc:creator><category>i.mx8qxp</category><category>u-boot</category><category>yocto</category><category>linux</category><category>nfs</category><category>tftp</category><category>embedded system</category></item><item><title>安裝 Opnsense 並設定 OpenVPN</title><link>https://e61983.github.io/2021-09-09-install-opnsense-and-openvpn/</link><pubDate>Thu, 09 Sep 2021 17:06:40 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 09 Sep 2021 17:06:40 +0800</atom:modified><guid>https://e61983.github.io/2021-09-09-install-opnsense-and-openvpn/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>目前有了在外面存取 NAS 資料的需求，直接裸奔實在不是個明智的想法。還是放在防火牆後面，架個 VPN 服務好了。&lt;br />
想說既然要架 VPN 伺服器。趁這次機會也一併換套防火牆軟體試試。&lt;/p></description><dc:creator>Yuan</dc:creator><category>vpn</category><category>openvpn</category><category>pfsense</category><category>opnsense</category><category>mis</category></item><item><title>在 i.MX 8QuadXPlus 上使用 Yocto 建置 Linux 系統 3</title><link>https://e61983.github.io/2021-09-07-yocto-with-imx8qxp-3/</link><pubDate>Tue, 07 Sep 2021 01:21:50 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 07 Sep 2021 01:21:50 +0800</atom:modified><guid>https://e61983.github.io/2021-09-07-yocto-with-imx8qxp-3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>UUU 全名為 Universal Update Utility。對 NXP i.MX 系列熟悉的使用者對 MFGTools 一定不會感到陌生，UUU 就是從 MFGTools 演進而來的，也稱為 MFGTools v3。它是用來進行 Freescale/NXP 晶片的映像檔燒錄。&lt;/p>
&lt;p>本篇將使用 UUU 將&lt;a href="https://e61983.github.io/2021-09-02-yocto-with-imx8qxp-2/#重新編譯映像檔並燒寫至-sd-卡">我們先前建立的映像檔&lt;/a>燒寫至 eMMC 中。&lt;/p></description><dc:creator>Yuan</dc:creator><category>i.mx8qxp</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>在 i.MX 8QuadXPlus 上使用 Yocto 建置 Linux 系統 2</title><link>https://e61983.github.io/2021-09-02-yocto-with-imx8qxp-2/</link><pubDate>Thu, 02 Sep 2021 13:36:25 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 02 Sep 2021 13:36:25 +0800</atom:modified><guid>https://e61983.github.io/2021-09-02-yocto-with-imx8qxp-2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>繼上一篇我們建立了可開機的映像檔後，接下來我們要來修改修改預設的除錯埠。從 UART0 改至 UART2。&lt;/p></description><dc:creator>Yuan</dc:creator><category>i.mx8qxp</category><category>device tree</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>使用 qpdf 來合併 PDF 與移除密碼保護</title><link>https://e61983.github.io/2021-09-02-cli-remove-pdf-password/</link><pubDate>Thu, 02 Sep 2021 10:13:38 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 02 Sep 2021 10:13:38 +0800</atom:modified><guid>https://e61983.github.io/2021-09-02-cli-remove-pdf-password/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>突然有了移除 PDF 密碼保護的需求。在查找相關的資料時，順手記錄下來。&lt;/p></description><dc:creator>Yuan</dc:creator><category>cli</category><category>pdf</category><category>note</category></item><item><title>在 i.MX 8QuadXPlus 上使用 Yocto 建置 Linux 系統</title><link>https://e61983.github.io/2021-09-01-yocto-with-imx8qxp/</link><pubDate>Wed, 01 Sep 2021 14:05:41 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 01 Sep 2021 14:05:41 +0800</atom:modified><guid>https://e61983.github.io/2021-09-01-yocto-with-imx8qxp/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近剛拿到 NXP 的 i.MAX8 開發板。在測試基本功能之餘，也順手把過程記錄下來。本文僅先建置 Yocto 的開發環境並編譯出可開機的映像檔，最後透過 SD 卡開機。&lt;/p></description><dc:creator>Yuan</dc:creator><category>i.mx8qxp</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>使用 Debian 來架設工作站</title><link>https://e61983.github.io/2021-08-31-install-debian-11/</link><pubDate>Tue, 31 Aug 2021 22:56:03 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 31 Aug 2021 22:56:03 +0800</atom:modified><guid>https://e61983.github.io/2021-08-31-install-debian-11/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近剛好在重新安裝工作站，就順手記錄起來囉!&lt;/p></description><dc:creator>Yuan</dc:creator><category>linux</category><category>debian</category><category>server</category><category>mis</category></item><item><title>NEO M8N GPS模組</title><link>https://e61983.github.io/2021-08-20-gps-module/</link><pubDate>Fri, 20 Aug 2021 13:54:03 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Fri, 20 Aug 2021 13:54:03 +0800</atom:modified><guid>https://e61983.github.io/2021-08-20-gps-module/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>因為工作上的需求，最近接觸到了 GNSS 模組。&lt;/p>
&lt;p>維基百科是這樣說的。&lt;/p>
&lt;blockquote>
&lt;p>衛星導航系統（Global Navigation Satellite System, GNSS）是覆蓋全球的自主地利空間定位的衛星系統，允許小巧的電子接收器確定它的所在位置（經度、緯度和高度），並且經由衛星廣播沿著視線方向傳送的時間信號精確到10米的範圍內。接收機計算的精確時間以及位置，可以作為科學實驗的參考。&lt;/p>
&lt;/blockquote></description><dc:creator>Yuan</dc:creator><category>gps</category><category>gis</category></item><item><title>在台灣常見的地理位置表示方式</title><link>https://e61983.github.io/2021-08-19-gps-format/</link><pubDate>Thu, 19 Aug 2021 14:22:28 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 19 Aug 2021 14:22:28 +0800</atom:modified><guid>https://e61983.github.io/2021-08-19-gps-format/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近開始接觸到跟 GPS 有關的東西，想說順便把地理定位相關的資料整理起來。所以這一篇就這樣誕生啦。&lt;/p></description><dc:creator>Yuan</dc:creator><category>geo</category><category>gps</category><category>go</category><category>gis</category></item><item><title>在 STM32MP1 上使用 Yocto 建置 Linux 系統 4</title><link>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-4/</link><pubDate>Thu, 12 Aug 2021 15:34:03 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 12 Aug 2021 15:34:03 +0800</atom:modified><guid>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>繼先前建立好基楚的系統後，我們已經加入了 bootlinlabs machine。&lt;br />
本文會接續之前建立的環境，開始加入自訂的 Image。&lt;/p></description><dc:creator>Yuan</dc:creator><category>stm32mp1</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>在 STM32MP1 上使用 Yocto 建置 Linux 系統 3</title><link>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-3/</link><pubDate>Thu, 12 Aug 2021 13:23:59 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 12 Aug 2021 13:23:59 +0800</atom:modified><guid>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>繼先前建立好基楚的系統後，我們已經加入了 meta-bootlinlabs Layer。&lt;br />
本文會接續之前建立的環境，開始加入自訂的 Machine。&lt;/p></description><dc:creator>Yuan</dc:creator><category>stm32mp1</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>在 STM32MP1 上使用 Yocto 建置 Linux 系統 2</title><link>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-2/</link><pubDate>Thu, 12 Aug 2021 09:22:34 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Thu, 12 Aug 2021 09:22:34 +0800</atom:modified><guid>https://e61983.github.io/2021-08-12-stm32mp-with-yocto-2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>繼先前建立好基楚的系統後，我們已經可以順利開機，並從 NFS 載入 rootf filesystem。&lt;br />
本文會接續之前建立的環境，開始加入自製的程式以及自訂的 Layer。&lt;/p></description><dc:creator>Yuan</dc:creator><category>stm32mp1</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>在 STM32MP1 上使用 Yocto 建置 Linux 系統</title><link>https://e61983.github.io/2021-08-11-stm32mp-with-yocto/</link><pubDate>Wed, 11 Aug 2021 15:22:57 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 11 Aug 2021 15:22:57 +0800</atom:modified><guid>https://e61983.github.io/2021-08-11-stm32mp-with-yocto/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>手邊有一片很久沒有動過的 STM32MP157。剛好最近工作上需要在 imx8 進行開發。本文會照著 Bootlin 的課程進行實作 [&lt;a href="https://wiki.st.com/stm32mpu/wiki/STM32MP1_Distribution_Package">2&lt;/a>],一方面了解 Yocto 要如何使用，另一方面順便藉此先練練手。&lt;/p></description><dc:creator>Yuan</dc:creator><category>stm32mp1</category><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>使用 Leaflet 地圖</title><link>https://e61983.github.io/2021-08-04-using-leaflet-map/</link><pubDate>Wed, 04 Aug 2021 14:43:00 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 04 Aug 2021 14:43:00 +0800</atom:modified><guid>https://e61983.github.io/2021-08-04-using-leaflet-map/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近剛好要更新地圖應用。先前是直接使用 Mapbox ，但覺得它的 Marker 操作起來不是很彈性。因緣際會下聽說了 Leaflet ，就來試看看吧。&lt;/p>
&lt;p>維基百科是這樣說的。&lt;/p>
&lt;blockquote>
&lt;p>Leaflet是一個開源的JavaScript庫，用於構建Web地圖應用。首次發布於2011年，&lt;a href="https://docs.mapbox.com/help/troubleshooting/migrate-legacy-static-tiles-api/">2&lt;/a>它支持大多數移動和桌面平台，支持HTML5和CSS3。&lt;/p>
&lt;/blockquote></description><dc:creator>Yuan</dc:creator><category>map</category><category>leaflet</category><category>geojson</category><category>website</category><category>gis</category></item><item><title>COSCUP 2021 Day 2</title><link>https://e61983.github.io/2021-08-01-coscup-2021-day-2/</link><pubDate>Sun, 01 Aug 2021 10:12:46 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sun, 01 Aug 2021 10:12:46 +0800</atom:modified><guid>https://e61983.github.io/2021-08-01-coscup-2021-day-2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>今年的 COSCUP 因應 COVID-19 疫情，所以以線上直播的方式進行。本篇主要是記錄大會第二天有興趣的議程以及關鍵字。&lt;/p></description><dc:creator>Yuan</dc:creator><category>mysql</category><category>acl</category><category>chatbot</category><category>liff</category><category>coscup</category><category>note</category></item><item><title>COSCUP 2021 Day 1</title><link>https://e61983.github.io/2021-07-31-coscup-2021-day-1/</link><pubDate>Sat, 31 Jul 2021 10:10:29 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Sat, 31 Jul 2021 10:10:29 +0800</atom:modified><guid>https://e61983.github.io/2021-07-31-coscup-2021-day-1/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>今年的 COSCUP 因應 COVID-19 疫情，所以以線上直播的方式進行。本篇主要是記錄大會第一天有興趣的議程以及關鍵字。&lt;/p></description><dc:creator>Yuan</dc:creator><category>gcc</category><category>go</category><category>linux</category><category>coscup</category><category>note</category></item><item><title>在 Yocto 環境中調整 Linux Kernel</title><link>https://e61983.github.io/2021-07-30-yocto-kernel-menuconfig/</link><pubDate>Fri, 30 Jul 2021 16:30:09 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Fri, 30 Jul 2021 16:30:09 +0800</atom:modified><guid>https://e61983.github.io/2021-07-30-yocto-kernel-menuconfig/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>一般來說，如果想要調整 Linux Kernel 只要在終端機輸入 &lt;code>make menuconfig&lt;/code> 這類的指令就可以了。但如果在不同的開發流程中，就不是這麼單純了。&lt;/p>
&lt;p>本文主要是針對 Yocto 開發流進行記錄，未來有機會的話，會再補充 buildroot 的開發方式。&lt;/p></description><dc:creator>Yuan</dc:creator><category>yocto</category><category>linux</category><category>kernel</category><category>embedded system</category></item><item><title>要如何在Hugo 中使用Bootstrap ?</title><link>https://e61983.github.io/2021-07-28-using-bootstrap-with-hugo/</link><pubDate>Wed, 28 Jul 2021 22:23:01 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 28 Jul 2021 22:23:01 +0800</atom:modified><guid>https://e61983.github.io/2021-07-28-using-bootstrap-with-hugo/</guid><description>&lt;!-- Bootstrap CSS -->
&lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>突然好奇，要如何在 Hugo 中使用外部資源。本文就先以最簡單的方式，使用 CDN 引入 Bootstrap。&lt;/p></description><dc:creator>Yuan</dc:creator><category>bootstrap</category><category>web</category><category>website</category></item><item><title>Yocto First Layer</title><link>https://e61983.github.io/2021-07-28-yocto-first-layer/</link><pubDate>Wed, 28 Jul 2021 12:28:09 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 28 Jul 2021 12:28:09 +0800</atom:modified><guid>https://e61983.github.io/2021-07-28-yocto-first-layer/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在準備完開發環境之後，接下來就要開始加上我們的設定、服務或是應用了。&lt;/p></description><dc:creator>Yuan</dc:creator><category>yocto</category><category>embedded system</category></item><item><title>Yocto 基礎介紹</title><link>https://e61983.github.io/2021-07-27-yocto-introduction/</link><pubDate>Tue, 27 Jul 2021 15:19:05 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 27 Jul 2021 15:19:05 +0800</atom:modified><guid>https://e61983.github.io/2021-07-27-yocto-introduction/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>先前有接觸過 buildroot 這類的 Linux Distribution 工具，但一直沒有好好的整理起來。&lt;br />
最近剛好有機會接觸 Yocto，打算在摸索的過程中一並記錄起來。&lt;/p></description><dc:creator>Yuan</dc:creator><category>yocto</category><category>linux</category><category>embedded system</category></item><item><title>使用 Yocto 打造你的 Raspberry Pi 系統</title><link>https://e61983.github.io/2021-07-26-building-raspberry-pi-systems-with-yocto/</link><pubDate>Mon, 26 Jul 2021 17:37:57 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Mon, 26 Jul 2021 17:37:57 +0800</atom:modified><guid>https://e61983.github.io/2021-07-26-building-raspberry-pi-systems-with-yocto/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>手邊有一片很久沒有動過的 Raspberry Pi 3 B+。剛好最近工作上需要在 imx8 進行開發。藉此順便先練練手。&lt;/p></description><dc:creator>Yuan</dc:creator><category>linux</category><category>yocto</category><category>embedded system</category></item><item><title>打造自己的Blog</title><link>https://e61983.github.io/2021-07-26-first-hugo-website/</link><pubDate>Mon, 26 Jul 2021 15:35:30 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Mon, 26 Jul 2021 15:35:30 +0800</atom:modified><guid>https://e61983.github.io/2021-07-26-first-hugo-website/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>以前有使用過 hexo 建立Blog，但一直沒有好好的經營。最近又有想要開始寫 Blog 的念頭。&lt;br />
希望這一次，可以持續撰寫下去。&lt;/p></description><dc:creator>Yuan</dc:creator><category>go</category><category>web</category><category>markdown</category><category>website</category></item><item><title>GNU LD print memory usage</title><link>https://e61983.github.io/2018-02-06-ld-print-memory-usage/</link><pubDate>Tue, 06 Feb 2018 23:31:12 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Tue, 06 Feb 2018 23:31:12 +0800</atom:modified><guid>https://e61983.github.io/2018-02-06-ld-print-memory-usage/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>使 GNU LD 輸出總共使用的記憶體大小與程式大小。&lt;/p></description><dc:creator>Yuan</dc:creator><category>linker</category><category>c language</category></item><item><title>C11 Generic Selections</title><link>https://e61983.github.io/2017-10-18-c11-generic-selections/</link><pubDate>Wed, 18 Oct 2017 00:25:49 +0800</pubDate><author>e61983@gmail.com (Yuan Li)</author><atom:modified>Wed, 18 Oct 2017 00:25:49 +0800</atom:modified><guid>https://e61983.github.io/2017-10-18-c11-generic-selections/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Generic 在C11上出現，我們可以透過實作出物件導向中的多型。要注意的是 Generic 是在編譯時期運作的。&lt;/p></description><dc:creator>Yuan</dc:creator><category>c11</category><category>c language</category></item></channel></rss>